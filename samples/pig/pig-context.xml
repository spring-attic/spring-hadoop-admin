<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:hdp="http://www.springframework.org/schema/hadoop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      	http://www.springframework.org/schema/batch	https://www.springframework.org/schema/batch/spring-batch-2.1.xsd
      	http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
      	http://www.springframework.org/schema/hadoop https://www.springframework.org/schema/hadoop/spring-hadoop.xsd">

	<context:property-placeholder location="hadoop.properties" />

	<hdp:configuration>
		fs.default.name=${hd.fs}
		mapred.job.tracker=${mapred.job.tracker}
	</hdp:configuration>

	<hdp:pig configuration-ref="hadoopConfiguration" exec-type="MAPREDUCE"/> 

	<job id="pigJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="prepareData" next="loadData">
			<tasklet ref="prepareDataTasklet" />
		</step>
		<step id="loadData">
			<tasklet ref="loadDataTasklet" />
		</step>		
	</job>
	
	<hdp:script-tasklet id="prepareDataTasklet">
		<hdp:script language="groovy">
		<![CDATA[			
			if (fsh.test("u.data")) {
		  		fsh.rmr("u.data")
			}
			inStream = cl.getResourceAsStream("ml-100k/u.data")
			org.apache.hadoop.io.IOUtils.copyBytes(inStream, fs.create("u.data"), cfg)
		]]>	
		</hdp:script>
	</hdp:script-tasklet>
	
	<hdp:pig-tasklet id="loadDataTasklet">
		<hdp:script location="classpath:script.pig" />
	</hdp:pig-tasklet> 
	

</beans>
